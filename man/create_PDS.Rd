% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_prep.R
\name{create_PDS}
\alias{create_PDS}
\title{Load PDS data from csvs, clean, format, and quantify}
\usage{
create_PDS(single_table = FALSE, remove_elements = FALSE,
  add_rates = FALSE, add_costs = FALSE, widen = TRUE,
  establishment_path = "./PDS/PDS_full_establishment.csv",
  establishment_sep = "\\t", building_path = "./PDS/PDS_full_building.csv",
  building_sep = ",", condition_path = "./PDS/PDS_full_condition.csv",
  condition_sep = "\\t", repair_costs = "./data_ext/parameter.table.rda",
  deterioration_rates = "./data_ext/deterioration.rates.rda",
  elementid = c(1810, 1952, 1838, 1845, 1869, 1891, 1918, 1992, 1994))
}
\arguments{
\item{single_table}{logical.  If TRUE, the output will be a single
component-level table}

\item{remove_elements}{logical. If TRUE, the elements specified in the
\code{elementid} argument will be removed.}

\item{add_rates}{logical.  If TRUE, the deterioration rates will be included
in the output.}

\item{add_costs}{logical. If TRUE, the repair costs will be included in the
output.}

\item{establishment_path}{character. Path to the establishment level data.}

\item{establishment_sep}{character. String used as column divider by the csv holding establishment data}

\item{building_path}{character. Path to the building level data}

\item{building_sep}{character. String used as column divider by the csv holding building level data}

\item{condition_path}{character. Path to the component level data}

\item{condition_sep}{character. String used as column divider by the csv holding component level data}

\item{deterioration_rates}{Either a character string contain the path to a
dataframe, or a dataframe containing \code{elementid},
\code{ab}, \code{bc}, \code{cd} and \code{de} columns that specify the
 deterioration rates for each element type.}

\item{elementid}{A numeric vector containing the \code{ElementID} numbers of the components you wish to remove. By default this contains the elementIDs of
unpainted redecorations and components that do not exist, e.g. no ceiling.}
}
\value{
The default behaviours is to produce a list of three tables (school-level,
building-level and component-level) containing all elements from the PDS data, with columns containing the unit_area and probability of being at each grade (which will be one or zero).

Setting \code{single_table = TRUE} will produce a single component-level table.

Setting \code{remove_elements} will remove those components specified by elementid in the \code{elementid} argument.  This is intended to remove those 'empty' components which indicate there is nothing there, for instance unpainted decorations, or no heating.  By default these are the elements specified by the \code{elementid} argument default.

The arguments \code{add_rates} and \code{add_costs} will cause the deterioration rates and repair costs to be added to component-level output as columns if there are set to \code{TRUE}/

The \code{widen} argument will add a column for each grade to the component-level output.  These columns contain the proability that the component is at that grade and will be one or zero.
}
\description{
This utility function is used to create a cleaned dataset ready for use
with the \code{Blockbuster2} Deterioration Model.
}
\examples{
\dontrun{
create_PDS()

# include repair costs and deterioration rates
create_PDS(add_rates = TRUE, add_costs = TRUE)

# remove 'empty' elements
create_PDS(remove_elements = TRUE)

# create a single table suitable for passing to the Blockbuster2 Deterioration Model using all default parameters and settings
input <- create_PDS(single_table = TRUE, remove_elements = TRUE, add_rates = TRUE, add_costs = TRUE)
Blockbuster2::Blockbuster(input)
}
}
